---
- name: Set stats for CI creation
  hosts: "{{ target_hosts }}"
  vars:
    target_hosts: "{{ vm_name+'*' if vm_name is defined else 'all' | default('all') }}"
  gather_facts: false
  tasks:
    - name: Creating list and dictionary variables
      ansible.builtin.set_fact:
        ci:
          new_vm_name: "{{ vm_name if vm_name is defined else inventory_hostname | default('AnsibleVM') }}"
          new_vm_os: "{{ virtualmachine_ostype_choice if (virtualmachine_ostype_choice is defined and virtualmachine_ostype_choice != '')
                          else 'Linux' | default ('Linux') }}"
          new_vm_ip: "{{ ansible_host }}"
          new_vm_provisioner: Ansible
          # for SNOW Workflows
          ci_name: "{{ vm_name if vm_name is defined else inventory_hostname | default('AnsibleVM')}}"
          ci_ip: "{{ ansible_host }}"
          ci_os: "{{ virtualmachine_ostype_choice if ( virtualmachine_ostype_choice is defined and virtualmachine_ostype_choice != '' )
                      else 'Linux' | default ('Linux') }}"
          ci_provisioner: "{{ new_vm_provisioner | default('Ansible') }}"
          ci_manufacturer: "{{ new_vm_platform | default('VMWare') }}"

    - name: Combine ci facts from all hosts into one artifact
      ansible.builtin.set_fact:
        combined_facts: "{{ combined_facts | default({}) | combine({ item: hostvars[item].ci }) }}"
      loop: "{{ groups[target_hosts] }}"
      run_once: true
      delegate_to: localhost

    - name: Print the combined dictionary
      ansible.builtin.debug:
        var: combined_facts
      run_once: true
      delegate_to: localhost

    - name: Setting Stats for the CI
      ansible.builtin.set_stats:
        data:
          new_ci_info: "{{ combined_facts }}"
        aggregate: false
      run_once: true
      delegate_to: localhost

    - name: Setting Stats for the CI
      ansible.builtin.debug:
        msg: "Set new_ci_info stats with value {{ item.value.new_vm_os }}"
      loop: "{{ combined_facts | dict2items }}"
      run_once: true
      delegate_to: localhost

    # Compatability with old code
    - name: Setting Stats for the CI
      ansible.builtin.set_stats:
        data:
          new_vm_name: "{{ vm_name if vm_name is defined else inventory_hostname | default('AnsibleVM') }}"
          new_vm_os: "{{ virtualmachine_ostype_choice if (virtualmachine_ostype_choice is defined and virtualmachine_ostype_choice != '') 
                          else 'Linux' | default ('Linux') }}"
          # new_vm_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
          new_vm_ip: "{{ ansible_host }}"
          new_vm_provisioner: Ansible
          # for SNOW Workflows
          ci_name: "{{ vm_name if vm_name is defined else inventory_hostname | default('AnsibleVM')}}"
          # ci_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
          ci_ip: "{{ ansible_host }}"
          ci_os: "{{ virtualmachine_ostype_choice if (virtualmachine_ostype_choice is defined and virtualmachine_ostype_choice != '') 
                      else 'Linux' | default ('Linux') }}"
          ci_provisioner: "{{ new_vm_provisioner | default('Ansible') }}"
          ci_manufacturer: "{{ new_vm_platform | default('VMWare') }}"

